name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [go, go-kali, go-ter]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Checkout specific branch
      run: git checkout ${{ matrix.branch }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binaries
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/${{ matrix.branch }}-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/${{ matrix.branch }}-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/${{ matrix.branch }}-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/${{ matrix.branch }}-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/${{ matrix.branch }}-windows-amd64.exe .

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker images
      run: |
        docker build -f Dockerfile.${{ matrix.branch }} -t ${{ matrix.branch }}:${{ github.ref_name }} .
        docker tag ${{ matrix.branch }}:${{ github.ref_name }} ${{ matrix.branch }}:latest

    - name: Push Docker images
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ matrix.branch }}:${{ github.ref_name }}
        docker push ${{ matrix.branch }}:latest